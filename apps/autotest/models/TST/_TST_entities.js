/* eslint-disable camelcase,no-unused-vars,new-cap,no-undef,comma-dangle */
// This file is generated automatically and contain definition for code insight.
// It ignored by UnityBase server because name start from "_".
// Do not modify this file directly. Run `ucli createCodeInsightHelper --help` for details

/**
 * UnityBasde autotest app
 * @version 1.0.0
 * @module tst
 */

/**
 * ub test main unity
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes unity
 */
class tst_2unity_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_2unity_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  code: '',
 /**
  * @type {String}
  */
  caption: null,
 /**
  * @type {String}
  */
  mi_unityEntity: '',
 /**
  * Row owner -> uba_user
  * @type {Number}
  */
  mi_owner: 0,
 /**
  * Creation date
  * @type {Date}
  */
  mi_createDate: new Date(),
 /**
  * User who create row -> uba_user
  * @type {Number}
  */
  mi_createUser: 0,
 /**
  * Modification date
  * @type {Date}
  */
  mi_modifyDate: new Date(),
 /**
  * User who modify row -> uba_user
  * @type {Number}
  */
  mi_modifyUser: 0,
 /**
  * Deletion date
  * @type {Date}
  */
  mi_deleteDate: new Date(),
 /**
  * User who delete row -> uba_user
  * @type {Number}
  */
  mi_deleteUser: null,
}
/**
* ub test main unity
* @type {tst_2unity_ns}
*/
const tst_2unity = new tst_2unity_ns()
/**
 * ub test main unity
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes unity
 */
class tst_3unity_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_3unity_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  code: '',
 /**
  * @type {String}
  */
  caption: null,
 /**
  * Row owner -> uba_user
  * @type {Number}
  */
  mi_owner: 0,
 /**
  * Creation date
  * @type {Date}
  */
  mi_createDate: new Date(),
 /**
  * User who create row -> uba_user
  * @type {Number}
  */
  mi_createUser: 0,
 /**
  * Modification date
  * @type {Date}
  */
  mi_modifyDate: new Date(),
 /**
  * User who modify row -> uba_user
  * @type {Number}
  */
  mi_modifyUser: 0,
 /**
  * Deletion date
  * @type {Date}
  */
  mi_deleteDate: new Date(),
 /**
  * User who delete row -> uba_user
  * @type {Number}
  */
  mi_deleteUser: null,
}
/**
* ub test main unity
* @type {tst_3unity_ns}
*/
const tst_3unity = new tst_3unity_ns()
/**
 * Test BLOB attributes
 * @extends EntityNamespace
 * @mixes mStorage
 */
class tst_blob_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_blob_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  description: null,
 /**
  * Long BLOB value
  * @type {ArrayBuffer}
  */
  blb: null,
}
/**
* Test BLOB attributes
* @type {tst_blob_ns}
*/
const tst_blob = new tst_blob_ns()
/**
 * Kind of documents, stored in COD
 * @extends EntityNamespace
 * @mixes mStorage
 */
class tst_category_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_category_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * Internal code of document kind
  * @type {String}
  */
  code: '',
 /**
  * @type {Number}
  */
  instanceID: 0,
 /**
  * @type {Number}
  */
  ubUser: 0,
}
/**
* Kind of documents, stored in COD
* @type {tst_category_ns}
*/
const tst_category = new tst_category_ns()
/**
 * Test CLOB attributes
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes clobTruncate
 */
class tst_clob_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_clob_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  description: null,
 /**
  * Long text value truncated to 100
  * @type {String}
  */
  text100: null,
 /**
  * Long text value truncated to 2
  * @type {String}
  */
  text2: null,
 /**
  * Long text value truncated to 2000
  * @type {String}
  */
  text2000: null,
 /**
  * Long text 1900
  * @type {String}
  */
  textN: null,
 /**
  * @type {String}
  */
  code: '',
 /**
  * Mixin &quot;clobTruncate&quot; autogenerated attribute for truncate text value of &quot;text100&quot; attribute
  * @type {String}
  */
  mi_tr_text100: null,
 /**
  * Mixin &quot;clobTruncate&quot; autogenerated attribute for truncate text value of &quot;text2&quot; attribute
  * @type {String}
  */
  mi_tr_text2: null,
 /**
  * Mixin &quot;clobTruncate&quot; autogenerated attribute for truncate text value of &quot;text2000&quot; attribute
  * @type {String}
  */
  mi_tr_text2000: null,
}
/**
* Test CLOB attributes
* @type {tst_clob_ns}
*/
const tst_clob = new tst_clob_ns()
/**
 * ub test dictionary
 * @extends EntityNamespace
 * @mixes mStorage
 */
class tst_dictionary_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_dictionary_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * Code
  * @type {String}
  */
  code: '',
 /**
  * Caption
  * @type {String}
  */
  caption: null,
 /**
  * @type {Number}
  */
  filterValue: 0,
 /**
  * @type {Number}
  */
  currencyValue: null,
 /**
  * @type {Number}
  */
  floatValue: null,
 /**
  * @type {String}
  */
  calculated: null,
 /**
  * @type {Boolean}
  */
  booleanColumn: undefined,
 /**
  * Row owner -> uba_user
  * @type {Number}
  */
  mi_owner: 0,
 /**
  * Creation date
  * @type {Date}
  */
  mi_createDate: new Date(),
 /**
  * User who create row -> uba_user
  * @type {Number}
  */
  mi_createUser: 0,
 /**
  * Modification date
  * @type {Date}
  */
  mi_modifyDate: new Date(),
 /**
  * User who modify row -> uba_user
  * @type {Number}
  */
  mi_modifyUser: 0,
}
/**
* ub test dictionary
* @type {tst_dictionary_ns}
*/
const tst_dictionary = new tst_dictionary_ns()
/**
 * Test adtDocument attributes
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes softLock
 * @mixes fts
 */
class tst_document_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_document_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  code: '',
 /**
  * @type {Date}
  */
  docDate: null,
 /**
  * @type {Date}
  */
  incomeDate: null,
 /**
  * @type {Date}
  */
  regDate: null,
 /**
  * @type {Number}
  */
  category: 0,
 /**
  * @type {Number}
  */
  favorites: 0,
 /**
  * @type {Number}
  */
  favorites2: 0,
 /**
  * @type {Date}
  */
  docDateTime: null,
 /**
  * @type {String}
  */
  description: null,
 /**
  * Document stored to simple store
  * @type {String}
  */
  fileStoreSimple: null,
 /**
  * @type {Number}
  */
  person: null,
 /**
  * @type {Number}
  */
  employee: null,
 /**
  * Row owner -> uba_user
  * @type {Number}
  */
  mi_owner: 0,
 /**
  * Creation date
  * @type {Date}
  */
  mi_createDate: new Date(),
 /**
  * User who create row -> uba_user
  * @type {Number}
  */
  mi_createUser: 0,
 /**
  * Modification date
  * @type {Date}
  */
  mi_modifyDate: new Date(),
 /**
  * User who modify row -> uba_user
  * @type {Number}
  */
  mi_modifyUser: 0,
}
/**
* Test adtDocument attributes
* @type {tst_document_ns}
*/
const tst_document = new tst_document_ns()
/**
 * test fts data with scope&#x3D;Connection non multi lang
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes fts
 */
class tst_ftsconnection_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_ftsconnection_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  caption: null,
 /**
  * @type {Date}
  */
  regDate: null,
}
/**
* test fts data with scope&#x3D;Connection non multi lang
* @type {tst_ftsconnection_ns}
*/
const tst_ftsconnection = new tst_ftsconnection_ns()
/**
 * test fts data with scope&#x3D;Connection multi lang
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes fts
 */
class tst_ftsconnection_ml_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_ftsconnection_ml_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  caption: null,
 /**
  * @type {Date}
  */
  regDate: null,
}
/**
* test fts data with scope&#x3D;Connection multi lang
* @type {tst_ftsconnection_ml_ns}
*/
const tst_ftsconnection_ml = new tst_ftsconnection_ml_ns()
/**
 * test fts data with scope&#x3D;Entity non multi lang
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes fts
 */
class tst_ftsentity_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_ftsentity_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  caption: null,
 /**
  * @type {Date}
  */
  regDate: null,
}
/**
* test fts data with scope&#x3D;Entity non multi lang
* @type {tst_ftsentity_ns}
*/
const tst_ftsentity = new tst_ftsentity_ns()
/**
 * Historical dictionary
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes dataHistory
 */
class tst_histDict_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_histDict_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * Our organization -> org_organization
  * @type {Number}
  */
  organization: 0,
 /**
  * @type {Number}
  */
  currencyValue: 0,
 /**
  * @type {Number}
  */
  mi_data_id: 0,
 /**
  * @type {Date}
  */
  mi_dateFrom: new Date(),
 /**
  * @type {Date}
  */
  mi_dateTo: new Date(),
 /**
  * Row owner -> uba_user
  * @type {Number}
  */
  mi_owner: 0,
 /**
  * Creation date
  * @type {Date}
  */
  mi_createDate: new Date(),
 /**
  * User who create row -> uba_user
  * @type {Number}
  */
  mi_createUser: 0,
 /**
  * Modification date
  * @type {Date}
  */
  mi_modifyDate: new Date(),
 /**
  * User who modify row -> uba_user
  * @type {Number}
  */
  mi_modifyUser: 0,
}
/**
* Historical dictionary
* @type {tst_histDict_ns}
*/
const tst_histDict = new tst_histDict_ns()
/**
 * Test for mapped ID [UB-1219]
 * @extends EntityNamespace
 * @mixes mStorage
 */
class tst_IDMapping_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_IDMapping_ns.attrs = {
 /**
  * Ідентифікатор запису
  * Ідентифікатор запису
  * @type {Number}
  */
  ID: 0,
 /**
  * Internal code
  * @type {String}
  */
  code: '',
}
/**
* Test for mapped ID [UB-1219]
* @type {tst_IDMapping_ns}
*/
const tst_IDMapping = new tst_IDMapping_ns()
/**
 * ub test main data
 * @extends EntityNamespace
 * @mixes mStorage
 * @mixes unity
 */
class tst_maindata_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_maindata_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  code: '',
 /**
  * @type {String}
  */
  caption: null,
 /**
  * @type {String}
  */
  complexCaption: null,
 /**
  * @type {Number}
  */
  nonNullDict_ID: 0,
 /**
  * @type {Number}
  */
  nullDict_ID: null,
 /**
  * @type {Number}
  */
  parent: null,
 /**
  * @type {Number}
  */
  parent1: null,
 /**
  * @type {String}
  */
  enumValue: '',
 /**
  * @type {Date}
  */
  dateTimeValue: null,
 /**
  * @type {Boolean}
  */
  booleanValue: undefined,
 /**
  * @type {String}
  */
  manyValue: null,
 /**
  * @type {String}
  */
  manyValue2: null,
 /**
  * @type {Number}
  */
  bigintValue: null,
 /**
  * For testing DDL Generator - this attribute must be ignored, since it mapped to existed attribute
  * @type {Number}
  */
  mappedToSelf: null,
 /**
  * Row owner -> uba_user
  * @type {Number}
  */
  mi_owner: 0,
 /**
  * Creation date
  * @type {Date}
  */
  mi_createDate: new Date(),
 /**
  * User who create row -> uba_user
  * @type {Number}
  */
  mi_createUser: 0,
 /**
  * Modification date
  * @type {Date}
  */
  mi_modifyDate: new Date(),
 /**
  * User who modify row -> uba_user
  * @type {Number}
  */
  mi_modifyUser: 0,
 /**
  * Deletion date
  * @type {Date}
  */
  mi_deleteDate: new Date(),
 /**
  * User who delete row -> uba_user
  * @type {Number}
  */
  mi_deleteUser: null,
}
/**
* ub test main data
* @type {tst_maindata_ns}
*/
const tst_maindata = new tst_maindata_ns()
/**
 * 
 * @extends EntityNamespace
 */
class tst_maind_dict_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_maind_dict_ns.attrs = {
 /**
  * @type {Number}
  */
  sourceID: 0,
 /**
  * @type {Number}
  */
  destID: 0,
}
/**
* 
* @type {tst_maind_dict_ns}
*/
const tst_maind_dict = new tst_maind_dict_ns()
/**
 * 
 * @extends EntityNamespace
 */
class tst_maind_dict2_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_maind_dict2_ns.attrs = {
 /**
  * @type {Number}
  */
  sourceID: 0,
 /**
  * @type {Number}
  */
  destID: 0,
}
/**
* 
* @type {tst_maind_dict2_ns}
*/
const tst_maind_dict2 = new tst_maind_dict2_ns()
/**
 * ub test main unity
 * @extends EntityNamespace
 * @mixes mStorage
 */
class tst_mainunity_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_mainunity_ns.attrs = {
 /**
  * @type {Number}
  */
  ID: 0,
 /**
  * @type {String}
  */
  code: '',
 /**
  * @type {String}
  */
  caption: null,
 /**
  * Row owner -> uba_user
  * @type {Number}
  */
  mi_owner: 0,
 /**
  * Creation date
  * @type {Date}
  */
  mi_createDate: new Date(),
 /**
  * User who create row -> uba_user
  * @type {Number}
  */
  mi_createUser: 0,
 /**
  * Modification date
  * @type {Date}
  */
  mi_modifyDate: new Date(),
 /**
  * User who modify row -> uba_user
  * @type {Number}
  */
  mi_modifyUser: 0,
 /**
  * Deletion date
  * @type {Date}
  */
  mi_deleteDate: new Date(),
 /**
  * User who delete row -> uba_user
  * @type {Number}
  */
  mi_deleteUser: null,
 /**
  * @type {String}
  */
  mi_unityEntity: '',
}
/**
* ub test main unity
* @type {tst_mainunity_ns}
*/
const tst_mainunity = new tst_mainunity_ns()
/**
 * List of test commands
 * @extends EntityNamespace
 */
class tst_service_ns extends EntityNamespace {}
/** Attributes defined in metadata. This property not exist in real life and added just for help */
tst_service_ns.attrs = {
}
/**
* List of test commands
* @type {tst_service_ns}
*/
const tst_service = new tst_service_ns()
